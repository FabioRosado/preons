#!/usr/bin/env node

const program = require("commander");
const yaml = require("yaml");
const path = require("path");
const fs = require("fs");

const log = console.info;
const error = console.error;

program
    .option("-m, --minify", "Minifies json config generation")
    .parse(process.argv);

(async () => {
    try {
        let defaultFile = path.join(__dirname, "..", "..", "config", "preons.yaml");

        let file = program.input ?
            path.join(process.cwd(), ...program.input.toString().split("/")) :
            defaultFile;

        let contents = fs.readFileSync(file, "utf8");
        let set = yaml.parse(contents);

        Object.entries(set.preons.properties).forEach(([property, options]) => {

            if (options && options['rule'] && Array.isArray(options['rule'])) {
                let rules = options['rule'].map(rule => {
                    return set.preons.rules[rule]
                })
                set.preons.properties[property]['values'] = rules.reduce((arr, cur) => {
                    return {
                        ...arr,
                        ...cur
                    }
                }, {})
            } else if (options && options['rule']) {
                set.preons.properties[property]['values'] = set.preons.rules[options['rule']]
            }
        })

        if (program['minify']) {
            return log(JSON.stringify(set));
        }

        log(JSON.stringify(set, null, 4));

    } catch (e) {
        error(e.message);
    }
})();